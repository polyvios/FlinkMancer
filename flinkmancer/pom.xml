<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>flinkmancer</groupId>
    <artifactId>flinkmancer</artifactId>
    <version>0.1</version>
    <packaging>jar</packaging>
        <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      
        <flink.version>1.10.0</flink.version>
        <scala.binary.version>2.12</scala.binary.version>
        <junit.version>4.12</junit.version>
        <assertj.version>3.11.1</assertj.version>
    </properties>

    <dependencies>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-java</artifactId>
                    <version>${flink.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.flink</groupId>
              <artifactId>flink-table-api-java-bridge_2.12</artifactId>
              <version>1.10.0</version>
              
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner_2.12</artifactId>
                <version>1.10.0</version>
                
            </dependency>
            <!-- 
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.5</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>1.6.4</version>
            </dependency>
            -->
            <!-- uncomment gia to log -->
            
            <dependency> 
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.7</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
                  <type>jar</type>
            </dependency>
            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-clients_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-scala_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>com.twitter</groupId>
                <artifactId>chill-thrift</artifactId>
                <version>0.7.6</version>
                <!-- exclusions for dependency conversion -->
                <exclusions>
                        <exclusion>
                                <groupId>com.esotericsoftware.kryo</groupId>
                                <artifactId>kryo</artifactId>
                        </exclusion>
                </exclusions>
        </dependency>
            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-gelly_2.11</artifactId>
                    <version>1.9.0</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-runtime-web_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-cep_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-cep-scala_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-state-processor-api_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-table-uber_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
                    <scope>provided</scope>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-test-utils-junit</artifactId>
                    <version>${flink.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-test-utils_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
                    <scope>test</scope>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
                    <scope>test</scope>
                    <type>test-jar</type>
            </dependency>

            <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-runtime_${scala.binary.version}</artifactId>
                    <version>${flink.version}</version>
                    <scope>test</scope>
                    <type>test-jar</type>
            </dependency>

            <dependency>
                    <groupId>joda-time</groupId>
                    <artifactId>joda-time</artifactId>
                    <version>2.7</version>
            </dependency>

            <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-math3</artifactId>
                    <version>3.5</version>
            </dependency>

            <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <version>${junit.version}</version>
            </dependency>

            <dependency>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                    <version>${assertj.version}</version>
                    <scope>test</scope>
            </dependency>
           
    </dependencies>
    <build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<executions>
				<!--execute all the unit tests-->
				<execution>
					<id>default-test</id>
					<phase>test</phase>
					<goals>
						<goal>test</goal>
					</goals>
					<configuration>
						<includes>
							<include>**/*Test.*</include>
						</includes>
					</configuration>
				</execution>
				</executions>
			</plugin>

			<plugin>
			   <groupId>org.codehaus.mojo</groupId>
			   <artifactId>exec-maven-plugin</artifactId>
			   <version>1.6.0</version>
			   <executions>
			     <execution>
			       <goals>
			        <goal>java</goal>
			       </goals>
			    </execution>
			   </executions>
			</plugin>

			<!-- Scala Compiler -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.4</version>
				<executions>
					<!-- Run scala compiler in the process-resources phase, so that dependencies on
						scala classes can be resolved later in the (Java) compile phase -->
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>

					<!-- Run scala compiler in the process-test-resources phase, so that dependencies on
						 scala classes can be resolved later in the (Java) test-compile phase -->
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>

					<execution>
						<id>scala-add-source</id>
						<phase>package</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jvmArgs>
						<jvmArg>-Xms128m</jvmArg>
						<jvmArg>-Xmx512m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version><!--$NO-MVN-MAN-VER$-->
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
                        <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.1</version>
				<executions>
					<!-- Run shade goal on package phase -->
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<artifactSet>
								<excludes>
									<!-- This list contains all dependencies of flink-dist
									Everything else will be packaged into the fat-jar
									-->
									<exclude>org.apache.flink:flink-annotations</exclude>
									<exclude>org.apache.flink:flink-shaded-hadoop2</exclude>
									<exclude>org.apache.flink:flink-shaded-curator-recipes</exclude>
									<exclude>org.apache.flink:flink-core</exclude>
									<exclude>org.apache.flink:flink-java</exclude>
									<exclude>org.apache.flink:flink-scala_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-runtime_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-optimizer_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-clients_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-avro_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-examples-batch_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-examples-streaming_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-streaming-java_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-streaming-scala_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-scala-shell_${scala.binary.version}</exclude>
									<exclude>org.apache.flink:flink-python</exclude>
									<exclude>org.apache.flink:flink-metrics-core</exclude>
									<exclude>org.apache.flink:flink-metrics-jmx</exclude>
									<exclude>org.apache.flink:flink-statebackend-rocksdb_${scala.binary.version}</exclude>

									<!-- Also exclude very big transitive dependencies of Flink

									WARNING: You have to remove these excludes if your code relies on other
									versions of these dependencies.

									-->

									<exclude>log4j:log4j</exclude>
									<exclude>org.scala-lang:scala-library</exclude>
									<exclude>org.scala-lang:scala-compiler</exclude>
									<exclude>org.scala-lang:scala-reflect</exclude>
									<exclude>com.data-artisans:flakka-actor_*</exclude>
									<exclude>com.data-artisans:flakka-remote_*</exclude>
									<exclude>com.data-artisans:flakka-slf4j_*</exclude>
									<exclude>io.netty:netty-all</exclude>
									<exclude>io.netty:netty</exclude>
									<exclude>commons-fileupload:commons-fileupload</exclude>
									<exclude>org.apache.avro:avro</exclude>
									<exclude>commons-collections:commons-collections</exclude>
									<exclude>org.codehaus.jackson:jackson-core-asl</exclude>
									<exclude>org.codehaus.jackson:jackson-mapper-asl</exclude>
									<exclude>com.thoughtworks.paranamer:paranamer</exclude>
									<exclude>org.xerial.snappy:snappy-java</exclude>
									<exclude>org.apache.commons:commons-compress</exclude>
									<exclude>org.tukaani:xz</exclude>
									<exclude>com.esotericsoftware.kryo:kryo</exclude>
									<exclude>com.esotericsoftware.minlog:minlog</exclude>
									<exclude>org.objenesis:objenesis</exclude>
									<exclude>com.twitter:chill_*</exclude>
									<exclude>com.twitter:chill-java</exclude>
									<exclude>commons-lang:commons-lang</exclude>
									<exclude>junit:junit</exclude>
									<exclude>org.apache.commons:commons-lang3</exclude>
									<exclude>org.slf4j:slf4j-api</exclude>
									<exclude>org.slf4j:slf4j-log4j12</exclude>
									<exclude>log4j:log4j</exclude>
									<exclude>org.apache.commons:commons-math</exclude>
									<exclude>org.apache.sling:org.apache.sling.commons.json</exclude>
									<exclude>commons-logging:commons-logging</exclude>
									<exclude>commons-codec:commons-codec</exclude>
									<exclude>com.fasterxml.jackson.core:jackson-core</exclude>
									<exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
									<exclude>com.fasterxml.jackson.core:jackson-annotations</exclude>
									<exclude>stax:stax-api</exclude>
									<exclude>com.typesafe:config</exclude>
									<exclude>org.uncommons.maths:uncommons-maths</exclude>
									<exclude>com.github.scopt:scopt_*</exclude>
									<exclude>commons-io:commons-io</exclude>
									<exclude>commons-cli:commons-cli</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>org.apache.flink:*</artifact>
									<excludes>
										<!-- exclude shaded google but include shaded curator -->
										<exclude>org/apache/flink/shaded/com/**</exclude>
										<exclude>web-docs/**</exclude>
									</excludes>
								</filter>
								<filter>
									<!-- Do not copy the signatures in the META-INF folder.
									Otherwise, this might cause SecurityExceptions when using the JAR. -->
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<!-- If you want to use ./bin/flink run <quickstart jar> uncomment the following lines.
							This will add a Main-Class entry to the manifest file -->
							<!--
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass></mainClass>
								</transformer>
							</transformers>
                                                        -->                                                   
							<createDependencyReducedPom>false</createDependencyReducedPom>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
			    <executions>
			        <execution>
			            <id>add-source</id>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>add-source</goal>
			            </goals>
			            <configuration>
			                <sources>
			                    <source>src/main/scala</source>
			                </sources>
			            </configuration>
			        </execution>
			        <execution>
			            <id>add-test-source</id>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>add-test-source</goal>
			            </goals>
			            <configuration>
			                <sources>
			                    <source>src/test/scala</source>
			                </sources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
		</plugins>
                 <resources>
                <resource>
                    <directory>src/data</directory>
                </resource>
              </resources>
	</build>
</project>